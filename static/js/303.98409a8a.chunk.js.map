{"version":3,"file":"static/js/303.98409a8a.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Filter/Filter.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["// export const getContacts = state => state.contacts.contacts;\nexport const getFilterValue = state => state.filter.filter;\nexport const getFilterStatus = state => state.filter.status;","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n  padding: 10, 5;\n`;\n\nexport const FilterInput = styled.input`\n  font: inherit;\n  padding: 8px;\n  margin: 8px 0 8px 0;\n  max-width: 80%;\n  border-radius: 8px;\n  border-color: blue;\n`;","import styled from 'styled-components';\n\nexport const ButtonFilter = styled.button`\ndisplay: inline-flex;\n    padding: 8px 12px;\n    border-radius: 4px;\n    border: solid 1px;\n    font: inherit;\n    cursor: pointer;\n    background-color: #fff;\n    color: inherit;\n\n    :hover {\n    background-color: #1565c0;\n    color: #fff;\n  }\n  \n  :active {\n    background-color: #1565c0;\n    color: #fff;\n  }\n\n`;\n\n\n  \n  \n  \n ","\nimport { ButtonFilter } from \"./Button.styled\";\n\nexport const Button = ({\n  selected = false,\n  type = \"button\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <ButtonFilter \n    style={\n        selected === false\n          ? { backgroundColor: ` #fff`, color: `#000` }\n          : { backgroundColor: `#1976d2`, color: `#fff` }\n      }\n            type={type}\n      {...otherProps}\n    >\n      {children}\n    </ButtonFilter>\n  );\n};","import styled from \"styled-components\";\n\n\nexport const WraperFilterStatus = styled.div`\ndisplay: flex;\n  gap: 4px;\n`","import { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport { statusFilters } from 'redux/constants';\nimport { getFilterStatus } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { WraperFilterStatus } from './StatusFilter.styled';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterStatus);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <WraperFilterStatus>\n      <Button\n        selected={filter === statusFilters.all}\n        onClick={() => handleFilterChange(statusFilters.all)}\n      >\n        All\n      </Button>\n\n      <Button\n        selected={filter === statusFilters.personal}\n        onClick={() => handleFilterChange(statusFilters.personal)}\n      >\n        Personal\n      </Button>\n\n      <Button\n        selected={filter === statusFilters.others}\n        onClick={() => handleFilterChange(statusFilters.others)}\n      >\n        Others\n      </Button>\n    </WraperFilterStatus>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport { RiSearchLine } from 'react-icons/ri';\nimport { StatusFilter } from 'components/StatusFilter/StatusFilter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n\n  const handleFilterChange = filter => dispatch(setFilter(filter.target.value));\n\n  return (\n    <FilterLabel>\n      <h2>Find contacts by Name</h2>\n      <StatusFilter />\n      <RiSearchLine\n            style={{\n              width: 36,\n              height: 36,\n            }}\n          />\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  margin-top: 20px;\n  margin-right: auto;\n  padding: 10px;\n  font-size: 24px;\n  background-color: #c3e6afea;\n  border-radius: 10px;\n  border: 2px solid rgba(0, 0, 0, 0.25);\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  padding: 5px 5px;\n  border: 2px solid rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const ContactButton = styled.button`\ndisplay: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin: 8px 10px 8px 20px;\n  padding: 8px 8px 8px 8px;\n  border-radius: 4px;\n  border: none;\n  height: 30px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1, 875;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    transform: scale(1.01);\n  }\n`\n\nexport const ContactCheckbox = styled.input`\ncolor: aliceblue;\n`","import { ContactButton } from './Contact.styled';\nimport { useDeleteContactMutation } from '../../redux/contactsSliceApi';\nimport { useNavigate } from 'react-router-dom';\nimport { RiFunctionFill } from 'react-icons/ri';\nimport { RiStarSFill } from 'react-icons/ri';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { RiEdit2Fill } from 'react-icons/ri';\n\nexport default function Contact({ name, phone, id, personal }) {\n  // console.log('name:', {name, phone, id})\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <>\n      {personal === false ? (\n        <RiFunctionFill\n          style={{\n            width: 24,\n            height: 24,\n          }}\n        />\n      ) : (\n        <RiStarSFill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n      )}\n      <span>{name}</span>: <span>{phone}</span>\n      <ContactButton\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isLoading}\n      >\n        <RiDeleteBin5Line\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n        Delete\n      </ContactButton>\n      <ContactButton type=\"button\" onClick={() => navigate(`${id}`)}>\n        <RiEdit2Fill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n        Edit\n      </ContactButton>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { getFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { ContactUl, ContactItem } from './ContactList.styled';\nimport { useGetContactsQuery } from '..//../redux/contactsSliceApi';\nimport Contact from 'components/Contact/Contact';\n\nexport default function ContactList() {\n  const filterValue = useSelector(getFilterValue);\n\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n  // console.log('data:', contacts);\n  // console.log('error:', error);\n  // console.log('isLoading:', isLoading);\n\n  let getVisibleContacts = (contacts, filter) => {\n    if (contacts)\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n  };\n\n  const visibleContacts = getVisibleContacts(contacts, filterValue);\n\n  return (\n    <>\n      {error && <p>Помилка завантаження, спробуйте ще раз </p>}\n\n      {isLoading ? (\n        <b>Завантаження</b>\n      ) : (\n        <ContactUl>\n          {visibleContacts.map(({ name, phone, id, personal }) => (\n            <ContactItem\n              key={id}\n              style={\n                personal === false\n                  ? { backgroundColor: ` #e1c7e9` }\n                  : { backgroundColor: `#00fff2` }\n              }\n            >\n              <Contact name={name} phone={phone} id={id} personal={personal} />\n            </ContactItem>\n          ))}\n        </ContactUl>\n      )}\n    </>\n  );\n}\n\n// function getRandomHexColor() {\n//   return `#${Math.floor(Math.random() * 11111314).toString(16)}`;\n// }\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n\n// 36177215\n// { backgroundColor: getRandomHexColor() }\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n/* color: white; */\npadding: 10px 5px 10px 50px\n`","import Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { ContactsTitle } from './Home.styled';\n\nexport default function Home() {\n  return (\n    <main>\n      <Filter />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <ContactList />\n    </main>\n  );\n}\n"],"names":["getFilterValue","state","filter","getFilterStatus","status","FilterLabel","styled","FilterInput","ButtonFilter","Button","selected","type","children","otherProps","style","backgroundColor","color","WraperFilterStatus","StatusFilter","dispatch","useDispatch","useSelector","handleFilterChange","setStatusFilter","statusFilters","onClick","width","height","value","onChange","setFilter","target","ContactUl","ContactItem","ContactButton","Contact","name","phone","id","personal","navigate","useNavigate","useDeleteContactMutation","deleteContact","isLoading","disabled","ContactList","filterValue","useGetContactsQuery","contacts","data","error","visibleContacts","contact","toLowerCase","includes","getVisibleContacts","map","ContactsTitle","Home"],"sourceRoot":""}